{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Kiae","text":""},{"location":"#what-is-kiae","title":"What is Kiae?","text":"<p>Kiae is a CloudNative Application Develop Platform base on the Kubernetes and Istio.</p>"},{"location":"#why-kiae","title":"Why Kiae?","text":"<p>Kubernetes and Istio are declarative softwares, and they are professional. So they are difficult to use for the application developer. For the company team, we usually build an internal cloud platform base on the Kubernetes. But it's always deeply integrated with the internal micro-services, and it's not integrated with Istio.</p> <p>Kiae built a open-source cloud platform completely base on the Kubernetes and Istio.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Git integration (GitHub, BitBucket, GitLab)</li> <li>Build image from the Git source repository</li> <li>Automatically push image to the image registry</li> <li>Deploy any image to multiple environments and multiple clusters</li> <li>Application level Observability with the Open-Telemetry</li> <li>Dependents management for the applications and the middlewares</li> <li>ConfigFiles management base on the ConfigMap and Secret</li> <li>Environments management for the multiple environments and multiple clusters</li> <li>Routes management base on the Istio VisualServices</li> <li>Entrypoint management base on the Istio IngressGateway</li> <li>Access controls management base on the Istio AuthzPolicy</li> <li>Web UI which provides real-time view of application activity</li> <li>SSO Integration (OIDC, OAuth2, LDAP, SAML 2.0, GitHub, GitLab, Microsoft, LinkedIn)</li> </ul>"},{"location":"#quick-start","title":"Quick Start","text":"<p>Follow the full getting started guide to walk through install and then visit the self-hosted Kiae.</p>"},{"location":"#how-does-it-work","title":"How does it work?","text":"<p>TODO</p>"},{"location":"FAQ/","title":"FAQ","text":"<p>todo</p>"},{"location":"architecture/","title":"Architecture","text":"<p>todo</p>"},{"location":"concepts/","title":"For Users","text":"<ul> <li>Project A project can have multiple applications, and a project can be associated with a git repository. To a certain extent, the project is equal to the git repository.</li> <li>Image A Container image, It's built from the git repository, can be used for the application deployment</li> <li>Application A server application, can be deploy to multiple environments</li> <li>Deployment A deployment for every application, support multiple deploy modes, contains Rolling, BlueGreen and Canary </li> <li>Event All K8S events related to the application. It's from loki, not from the APIServer of Kubernetes</li> <li>Log The stdout and stderr logs from pods of the Application</li> <li>Config The configuration files can be mounted on the Application pods base on the Kubernetes ConfigMap and Secret</li> <li>Environment Environment variables that can be used by applications</li> <li>Entrypoint The entrypoint can be visit for the application</li> <li>Route The route can be setting ratelimit, CORS, MOCK and other for the application</li> <li>Dependent Middleware or other applications that will be called by the application</li> <li>AccessRule Rules that control how the application is called by other applications</li> </ul>"},{"location":"concepts/#for-operators","title":"For Operators","text":"<ul> <li>GitProvider Provide Git repository integrated configuration, provide users with oauth2 way to authorize their own code repository</li> <li>ImageRegistry Image repository configuration is provided for the built image storage. Support Dockerhub, Github Registry, Google Registry or other self-built image repositories</li> <li>ImageBuilder CNB image builder. Platform administrators can build image builders supported by their own platforms. For more information, please see CNB</li> <li>Open Application Model(OAM) brings modular, extensible, and portable design for modeling application deployment with higher level yet consistent API.</li> <li>KubeVela Application A concrete implementation of OAM, which can contain a set of Components, and each Component can contain multiple Traits. This is a Custom Resource Definition (CRD).</li> <li>KubeVela Component A Component defines the delivery artifact (binary, Docker image, Helm Chart...) or cloud service included in one application. </li> <li>KubeVela Trait Traits are management requirements of an artifact that can be declared with each Component. For example: scale and rollout strategy, persistent storage claim, gateway endpoint and so on.</li> <li>KubeVela Addon A KubeVela addon is a collection that can contains the defintions of the components and traits. From kubevela's point of view, Kiae is an Addon.</li> <li>Istio Gateway We use a istio gateway to manage inbound and outbound traffic for your mesh, letting you specify which traffic you want to enter or leave the mesh.</li> <li>Istio VirtualService A virtual service lets you configure how requests are routed to a service within an Istio service mesh, building on the basic connectivity and discovery provided by Istio and your platform</li> <li>Cloud Native Buildpacks(CNB) transform your application source code into images that can run on any cloud.</li> <li>Kpack Stacks A stack resource is the specification for a cloud native buildpacks stack used during build and in the resulting app image. This is a Custom Resource Definition (CRD).</li> <li>Kpack Stores A store resource is a repository of buildpacks packaged in buildpackages that can be used by kpack to build OCI images. This is a Custom Resource Definition (CRD).</li> </ul>"},{"location":"getting-started/","title":"Getting Started","text":""},{"location":"getting-started/#prerequisites","title":"Prerequisites","text":"<ul> <li>Installed kubectl and kubevela command-line tool.</li> <li>Have a kubeconfig file (default location is ~/.kube/config).</li> </ul>"},{"location":"getting-started/#1-install-the-command-line-tools","title":"1. Install the command-line tools","text":"<pre><code>brew update\nbrew install kind\nbrew install kubevela\n</code></pre>"},{"location":"getting-started/#2-create-a-local-cluster","title":"2. Create a local cluster","text":"<pre><code>echo \"kind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nnodes:\n  - role: control-plane\n    image: kindest/node:v1.22.15\n\" &gt; kind-kiae.yaml\nkind create cluster --name kiae --config kind-kiae.yaml\n</code></pre>"},{"location":"getting-started/#3-install-the-kubevela-core-and-kiae-addons","title":"3. Install the kubevela-core and kiae addons","text":"<pre><code>vela install\nvela addon registry add Kiae --type helm --endpoint=https://kiaedev.github.io/vela-addons\nvela addon enable kiae\n</code></pre>"},{"location":"getting-started/#4-install-the-kiae","title":"4. Install the Kiae","text":"<pre><code>helm repo add kiaedev https://kiaedev.github.io/helm-charts\nhelm repo update\nhelm install --namespace kiae-system --create-namespace kiae kiaedev/kiae\n</code></pre>"},{"location":"getting-started/#5-access-the-kiae","title":"5. Access the Kiae","text":"<p>By default, the Kiae server is not exposed with an external IP. To access the Kiae, choose one of the following techniques to expose the Kiae server:</p>"},{"location":"getting-started/#service-type-load-balancer","title":"Service Type Load Balancer","text":"<p>Change the kiae service type to LoadBalancer:</p> <pre><code>kubectl patch svc kiae -n kiae-system -p '{\"spec\": {\"type\": \"LoadBalancer\"}}'\n</code></pre>"},{"location":"getting-started/#port-forwarding","title":"Port Forwarding","text":"<p>Kubectl port-forwarding can also be used to connect to the API server without exposing the service.</p> <pre><code>kubectl port-forward svc/kiae -n kiae-system 8081:8081\n</code></pre> <p>The Kiae can then be accessed using http://localhost:8081</p>"},{"location":"getting-started/#6-login-the-kiae","title":"6. Login the Kiae","text":"<p>For the first login, you must login the with the administrator account. The default username and password is below:</p> <ul> <li>Username: admin@example.com</li> <li>Password: password</li> </ul>"},{"location":"getting-started/#7-configure-the-gitprovider","title":"7. Configure the GitProvider","text":"<p>You must configure the GitProvider to support the developer get the source repository.</p>"},{"location":"getting-started/#8-configure-the-imageregistry","title":"8. Configure the ImageRegistry","text":"<p>You must configure the ImageRegistry to support the ImageBuilder save image.</p>"},{"location":"getting-started/#9-configure-the-imagebuilder","title":"9. Configure the ImageBuilder","text":"<p>You must configure the ImageBuilder to support the developer build the source repository</p>"},{"location":"roadmap/","title":"Roadmap","text":"<p>todo</p>"},{"location":"operator-manual/git-provider/","title":"Git Provider","text":""},{"location":"operator-manual/git-provider/#github","title":"GitHub","text":""},{"location":"operator-manual/git-provider/#new-oauth2-application","title":"New Oauth2 Application","text":"<p>Register a new application with GitHub ensuring the callback URL is <code>(origin)/provider/oauth2/callback</code>. For example if your visit endpint at <code>https://kiae.example.com/</code> the callback would be <code>https://kiae.example.com/provider/oauth2/callback</code>.</p>"},{"location":"operator-manual/git-provider/#new-github-provider","title":"New GitHub Provider","text":"<p>Visit the ops admin dashboard to configure the github provider.</p> <p>Input the ClientID and the ClientSecret that from the Github Oauth2 Application</p>"},{"location":"operator-manual/git-provider/#gitlab","title":"GitLab","text":""},{"location":"operator-manual/git-provider/#new-oauth2-application_1","title":"New Oauth2 Application","text":"<p>Register a new application via User Settings -&gt; Applications ensuring the callback URL is <code>(origin)/provider/oauth2/callback</code>. For example if your visit endpint at <code>https://kiae.example.com/</code> the callback would be <code>https://kiae.example.com/provider/oauth2/callback</code>.</p> <p>The application requires the user to grant the <code>api</code> scopes.</p>"},{"location":"operator-manual/git-provider/#new-gitlab-provider","title":"New Gitlab Provider","text":"<p>Visit the ops admin dashboard to configure the gitlab provider.</p> <p>Input the ClientID and the ClientSecret that from the Gitlab Application</p>"},{"location":"operator-manual/image-builder/","title":"Overview","text":"<p>We use the Buildpacks to build the image from the source code. You can build your own builders using the community buildpacks. For more information on the https://buildpacks.io/.</p> <p>But it's easier here. You only need to input the buildpacks parameters, builder will be created automatically. </p>"},{"location":"operator-manual/image-builder/#new-builder","title":"New Builder","text":"<p>Like this, let's create a builder that supports the go language.</p>  <p>The <code>paketo-buildpacks/go</code> built from paketo-buildpacks, You can find other languages at the docs</p>"},{"location":"operator-manual/image-registry/","title":"Image Registry","text":""},{"location":"operator-manual/image-registry/#dockerhub-for-the-free-account","title":"Dockerhub for the free account","text":"<p>We will create the repository with the prefix <code>kiae-builder-</code></p>"},{"location":"operator-manual/image-registry/#all-other-container-registries","title":"All other container registries","text":"<p>You must create a namespace in advance that named <code>kiae-builders</code> </p>"},{"location":"operator-manual/installation/","title":"Installation","text":""},{"location":"operator-manual/installation/#prerequisites","title":"Prerequisites","text":"<ul> <li>Installed kubectl and kubevela command-line tool.</li> <li>Have a kubeconfig file (default location is ~/.kube/config).</li> </ul>"},{"location":"operator-manual/installation/#installation-steps","title":"Installation steps","text":"<p>1.Install the kubevela-core and kiae addons</p> <pre><code>vela install\nvela addon registry add Kiae --type helm --endpoint=https://kiaedev.github.io/vela-addons\nvela addon enable kiae\n</code></pre> <p>2.Install the Kiae</p> <pre><code>helm repo add kiaedev https://kiaedev.github.io/helm-charts\nhelm repo update\nhelm install -n kiae-system --create-namespace kiae kiaedev/kiae\n</code></pre> <p>3.(Optional) Install with configuration</p> <pre><code>helm install -n kiae-system --create-namespace kiae kiaedev/kiae --set config.server.url=http://kiae.example.com\n</code></pre>"},{"location":"operator-manual/installation/#verifying-the-installation","title":"Verifying the installation","text":"<p>Status of the installation can be verified using Helm:</p> <pre><code>helm status kiae -n kiae-system\n</code></pre>"},{"location":"operator-manual/installation/#updating-your-kiae-configuration","title":"Updating your Kiae configuration","text":"<p>You can provide override settings specific to any Kiae Helm chart used above and follow the Helm upgrade workflow to customize your Kiae installation. The available configurable options can be found by using <code>helm show values kiaedev/&lt;chart&gt;</code>; for example <code>helm show values kiaedev/kiae</code>.</p> <pre><code>echo 'config:\n  debug: true\n  server:\n    port: 8081\n    url: http://kiae.example.com\n  dex:\n    adminEmail: \"admin@example.com\"\n    # bcrypt hash of the string \"password\": $(echo password | htpasswd -BinC 10 admin | cut -d: -f2)\n    adminPasswd: \"$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W\"\n' &gt; values.yaml\nhelm upgrade -n kiae-system kiae kiaedev/kiae -f values.yaml\n</code></pre>"},{"location":"operator-manual/installation/#uninstall","title":"Uninstall","text":"<pre><code>helm delete kiae -n kiae-system\nvela addon disable kiae\nvela uninstall\n</code></pre>"},{"location":"user-guide/application/","title":"Application","text":""},{"location":"user-guide/application/#creation","title":"Creation","text":"<ol> <li>Select the Environment</li> <li>Select the Image</li> <li>Edit your program port</li> </ol>"},{"location":"user-guide/application/#overview","title":"Overview","text":"<p>There is the core content for the application developer. You can view the pods,events,logs,dependents,configs,environments,routes,endpoints,access-controls and more settings.</p>"},{"location":"user-guide/application/#events","title":"Events","text":""},{"location":"user-guide/application/#routes","title":"Routes","text":""},{"location":"user-guide/application/#entries","title":"Entries","text":""},{"location":"user-guide/image/","title":"Image","text":""},{"location":"user-guide/image/#new-image","title":"New Image","text":"<p>Build an image from the git source repository. Only need to select the branch or the tag you want to build.</p>"},{"location":"user-guide/image/#build-logs","title":"Build Logs","text":"<p>Then you can view the build logs for your image build task. And wait for the build to complete, the image could be used to deploy.</p>"},{"location":"user-guide/image/#optionaladd-existing-image","title":"(Optional)Add Existing Image","text":"<p>You can add an existing image directly without the build task.</p>"},{"location":"user-guide/project/","title":"Project","text":""},{"location":"user-guide/project/#project-creation","title":"Project Creation","text":"<ol> <li>Click the Authorize button on the first creation of the project, You will be prompted to authorize with the git provider.</li> <li>Select the git repository.</li> <li>Edit the project name and intro you want.</li> </ol>"},{"location":"user-guide/project/#project-settings","title":"Project Settings","text":"<p>Depending on the specific situation of the program, you can set the build parameters and run parameters.</p> <ol> <li>Which Build Args can be set depends on the builder.</li> <li>Which Run Args can be set depends on the your program. </li> </ol>"}]}